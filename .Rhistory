Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"], "Tray")
}
}
#Contamination From Hands to Pre going to Tray
if(Pick_YN_Pre==1){
Tr_H_Pre<-Cont_Student*TE_H_F
#Contamination at tray
Cont_Tray_Pre<- Func_Index_DF(Pre_Data.Frame,Pre_Picked,"Contamination") + Tr_H_Pre - (Func_Index_DF(Pre_Data.Frame,Pre_Picked,"Contamination")* TE_F_H) #tranfer from fruit to hand
#Add contamination to chosen fruit in Dataframe
Cont_Dif_Student<-Func_Index_DF(Pre_Data.Frame,Pre_Picked,"Contamination")-(Cont_Tray_Pre)
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)== "Contamination"]<-Cont_Tray_Pre
Cont_Student<-ifelse(Cont_Student +(Cont_Dif_Student)<0,0,Cont_Student +(Cont_Dif_Student))
Pre_Data.Frame<-Func_Allergen_CC(Pre_Data.Frame,Pre_Picked)
}
# Consumption==========================================================================
#Fruit
#Did the student consume the Fruit?
Eat_YN_Fr<-ifelse(runif(1)<Pr_eat_Fr,1,0)
#Changing Data Frame so it updates when student consumes fruit.
if(Pick_YN_Fr==1){
if(Eat_YN_Fr==1){
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)== "Location"]<-"Consumed"
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"]<-paste(Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"], "Consumed")
}else{
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)== "Location"]<-"Not Consumed"
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"]<-paste(Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"], "NotConsumed")
}
}
#Pss
#Did student consume the Pss
Eat_YN_Pss<-ifelse(runif(1)<Pr_eat_Pss,1,0)
#Changing Data Frame for consumption of Pss
if(Pick_YN_Pss==1){
if(Eat_YN_Pss==1){
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)== "Location"]<-"Consumed"
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"]<-paste(Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"], "Consumed")
}else{
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)== "Location"]<-"Not Consumed"
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"]<-paste(Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"], "NotConsumed")
}
}
#Pre
#Did student consume the Pre
Eat_YN_Pre<-ifelse(runif(1)<Pr_eat_Pre,1,0)
#Changind Data Frame for consumption of Pre
if(Pick_YN_Pre==1){
if(Eat_YN_Pre==1){
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)== "Location"]<-"Consumed"
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"], "Consumed")
}else{
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)== "Location"]<-"Not Consumed"
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"], "NotConsumed")
}
}
#Consumption to share table=======================================================
if(Share_Table_YN==1){
#Proability of the student sharing their food.
Share_YN_Food<-ifelse(runif(1)<Pr_share_Food,1,0)
#Fruit
#Items in Share Table:
if(Pick_YN_Fr==1){
if(Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="Location"]== "Not Consumed"){
if(Share_YN_Food==1){
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)== "Location"]<-"Shared"
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"]<-paste(Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"], "Shared")
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="STtimes"]<-Func_Index_DF(Fr_Data.Frame,Fr_Picked,"STtimes")+1
V_Shared_Fr<-(V_Shared_Fr+1)
}else{
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)== "Location"]<-"Not Shared"
Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"]<-paste(Fr_Data.Frame[Fr_Picked,colnames(Fr_Data.Frame)=="History"], "NotShared")
}
}
}
#Pss
if(Pick_YN_Pss==1){
if(Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="Location"]== "Not Consumed"){
if(Share_YN_Food==1){
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)== "Location"]<-"Shared"
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"]<-paste(Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"], "Shared")
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="STtimes"]<-Func_Index_DF(Pss_Data.Frame,Pss_Picked,"STtimes")+1
V_Shared_Pss<-(V_Shared_Pss+1)
}else{
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)== "Location"]<-"Not Shared"
Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"]<-paste(Pss_Data.Frame[Pss_Picked,colnames(Pss_Data.Frame)=="History"], "NotShared")
}
}
}
#Pre
if(Pick_YN_Pre==1){
if(Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="Location"]== "Not Consumed"){
if(Share_YN_Food==1){
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)== "Location"]<-"Shared"
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"], "Shared")
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="STtimes"]<-Func_Index_DF(Pre_Data.Frame,Pre_Picked,"STtimes")+1
V_Shared_Pre<-(V_Shared_Pre+1)
}else{
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)== "Location"]<-" Not Shared"
Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_Picked,colnames(Pre_Data.Frame)=="History"], "NotShared")
}
}
}
#Picking and consuming ST items ==================================================================
#Shared Fruit
Items_Shared<-Fr_Data.Frame$Location == "Shared"
Sum_Shared<-sum(Items_Shared)
if(Sum_Shared>0){
#Fruit
#Did a student pick an item for the share table?
Pick_ST_YN_Fr<-ifelse(runif(1)<Pr_Pick_ST_Fr,1,0)
#Fruit picked from Share Table.
if(Pick_ST_YN_Fr==1){
Search.df.fr_ST<-Func_Search_Data(Fr_Data.Frame,Fr_Data.Frame$Location,"Shared",1)
#Fruit from share table selected #
Fr_ST_Picked<-as.numeric(Search.df.fr_ST$Apple.No.)
Fr_Data.Frame[as.numeric(row.names(Search.df.fr_ST)),colnames(Search.df.fr)== "Location"]<-"Tray"
Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)=="History"]<-paste(Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)=="History"], "Tray")
}
#Contamination from Hand to Fruit or from Fruit to Hand.
if(Pick_ST_YN_Fr==1){
#Contamination at tray
Cont_Tray_Fr<- Func_Index_DF(Fr_Data.Frame,Fr_ST_Picked,"Contamination") + Tr_H_Fr - (Func_Index_DF(Fr_Data.Frame,Fr_ST_Picked,"Contamination")* TE_F_H)
#Add contamination to chosen fruit in Dataframe
Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)== "Contamination"]<-Cont_Tray_Fr
Fr_Data.Frame<-Func_Allergen_CC(Fr_Data.Frame,Fr_ST_Picked)
}
#Consumption of share table item
#Did the student consume the Fruit?
Eat_YN_ST_Fr<-ifelse(runif(1)<Pr_eat_ST_Fr,1,0)
#Changing Data Frame so it updates when student consumes fruit.
if(Pick_ST_YN_Fr==1){
if(Eat_YN_ST_Fr==1){
Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)== "Location"]<-"Consumed"
Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)=="History"]<-paste(Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)=="History"], "Consumed")
}else{
Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)== "Location"]<-"Not Consumed"
Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)=="History"]<-paste(Fr_Data.Frame[Fr_ST_Picked,colnames(Fr_Data.Frame)=="History"], "NotConsumed")
}
}
}
#Shared Pss
Items_Shared_Pss<-Pss_Data.Frame$Location == "Shared"
Sum_Shared_Pss<-sum(Items_Shared_Pss)
if(Sum_Shared_Pss>0){
#Did a student pick an item for the share table?
Pick_ST_YN_Pss<-ifelse(runif(1)<Pr_Pick_ST_Pss,1,0)
#Pss picked from Share Table.
if(Pick_ST_YN_Pss==1){
Search.df.Pss_ST<-Func_Search_Data(Pss_Data.Frame,Pss_Data.Frame$Location,"Shared",1)
#Pss from share table selected #
Pss_ST_Picked<-as.numeric(Search.df.Pss_ST$Pss.No.)
Pss_Data.Frame[as.numeric(row.names(Search.df.Pss_ST)),colnames(Search.df.Pss)== "Location"]<-"Tray"
Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)=="History"]<-paste(Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)=="History"], "Tray")
}
#Contamination from Hand to Fruit or from Hand to Fruit.
if(Pick_ST_YN_Pss==1){
#Contamination at tray
Cont_Tray_Pss<- Func_Index_DF(Pss_Data.Frame,Pss_ST_Picked,"Contamination") + Tr_H_Pss - (Func_Index_DF(Pss_Data.Frame,Pss_ST_Picked,"Contamination")* TE_F_H)
#Add contamination to chosen fruit in Dataframe
Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)== "Contamination"]<-Cont_Tray_Pss
Pss_Data.Frame<-Func_Allergen_CC(Pss_Data.Frame,Pss_ST_Picked)
}
#Consumption of share table item
#Did the student consume the Fruit?
Eat_YN_ST_Pss<-ifelse(runif(1)<Pr_eat_ST_Pss,1,0)
#Changing Data Frame so it updates when student consumes fruit.
if(Pick_ST_YN_Pss==1){
if(Eat_YN_ST_Pss==1){
Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)== "Location"]<-"Consumed"
Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)=="History"]<-paste(Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)=="History"], "Consumed")
}else{
Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)== "Location"]<-"Not Consumed"
Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)=="History"]<-paste(Pss_Data.Frame[Pss_ST_Picked,colnames(Pss_Data.Frame)=="History"], "NotConsumed")
}
}
}
#Shared Pre
Items_Shared_Pre<-Pre_Data.Frame$Location == "Shared"
Sum_Shared_Pre<-sum(Items_Shared_Pre)
if(Sum_Shared_Pre>0){
#Did a student pick an item for the share table?
Pick_ST_YN_Pre<-ifelse(runif(1)<Pr_Pick_ST_Pre,1,0)
#Pre picked from Share Table.
if(Pick_ST_YN_Pre==1){
Search.df.Pre_ST<-Func_Search_Data(Pre_Data.Frame,Pre_Data.Frame$Location,"Shared",1)
#Pre from share table selected #
Pre_ST_Picked<-as.numeric(Search.df.Pre_ST$Pre.No.)
Pre_Data.Frame[as.numeric(row.names(Search.df.Pre_ST)),colnames(Search.df.Pre)== "Location"]<-"Tray"
Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)=="History"], "Tray")
}
#Contamination from Hand to Fruit or from Hand to Fruit.
if(Pick_ST_YN_Pre==1){
#Contamination at tray
Cont_Tray_Pre<- Func_Index_DF(Pre_Data.Frame,Pre_ST_Picked,"Contamination") + Tr_H_Pre - (Func_Index_DF(Pre_Data.Frame,Pre_ST_Picked,"Contamination")* TE_F_H)
#Add contamination to chosen fruit in Dataframe
Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)== "Contamination"]<-Cont_Tray_Pre
Pre_Data.Frame<-Func_Allergen_CC(Pre_Data.Frame,Pre_ST_Picked)
}
#Consumption of share table item
#Did the student consume the Fruit?
Eat_YN_ST_Pre<-ifelse(runif(1)<Pr_eat_ST_Pre,1,0)
#Changing Data Frame so it updates when student consumes fruit.
if(Pick_ST_YN_Pre==1){
if(Eat_YN_ST_Pre==1){
Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)== "Location"]<-"Consumed"
Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)=="History"], "Consumed")
}else{
Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)== "Location"]<-"Not Consumed"
Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)=="History"]<-paste(Pre_Data.Frame[Pre_ST_Picked,colnames(Pre_Data.Frame)=="History"], "NotConsumed")
}
}
}#end of if there is st items loop
}#end of toggle loop
}  #end of first loop
#Updated items from not consumed, not shared, etc to wasted.
Fr_Data.Frame$Location[Fr_Data.Frame$Location=="Not Shared"]<-"Discarded"
Fr_Data.Frame$Location[Fr_Data.Frame$Location=="Not Consumed"]<-"Discarded"
if(Reservice_YN==0){
Fr_Data.Frame$Location[Fr_Data.Frame$Location=="Selection Table"]<-"Discarded"
}
if(Resharing_YN==0){
Fr_Data.Frame$Location[Fr_Data.Frame$Location=="Shared"]<-"Discarded"
}
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Not Shared"]<-"Discarded"
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Not Consumed"]<-"Discarded"
if(Reservice_YN==0){
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Selection Table"]<-"Discarded"
}
if(Resharing_YN==0){
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Shared"]<-"Discarded"
}
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Not Shared"]<-"Discarded"
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Not Consumed"]<-"Discarded"
if(Reservice_YN==0){
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Selection Table"]<-"Discarded"
}
if(Resharing_YN==0){
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Shared"]<-"Discarded"
}
#Adding the data to the datalist
datalistFr[[j]]<-Fr_Data.Frame
datalistPss[[j]]<-Pss_Data.Frame
datalistPre[[j]]<-Pre_Data.Frame
source("Outputs_ServicesV3.R")
message("Service #", j)
} #end of second loop
#Creation of the Servies Data Frames
Fr_Data = do.call(rbind,datalistFr)
Pss_Data = do.call(rbind,datalistPss)
Pre_Data = do.call(rbind,datalistPre)
#Adding Data into the Datalists
datalistFr_days[[k]]<-Fr_Data
datalistPss_days[[k]]<-Pss_Data
datalistPre_days[[k]]<-Pre_Data
source("Output_Days V3.R")
message("Day #", k)
}#end of day loop
#Creation of the Days Data Frames
Fr_Data_Days = do.call(rbind,datalistFr_days)
Pss_Data_Days = do.call(rbind,datalistPss_days)
Pre_Data_Days = do.call(rbind,datalistPre_days)
View(Fr_Data_Days)
Surface hands<- 98
Surface hands<- 98  #cm^2
mass_feces_hands<- -3.50 #log(g/hands)
HU_NV_in_Feces<- 6.65 #log HuNov CG/ g
Hu_NV_restroom<- .8 #log HUNOV/cm2
TE_RH<- 10.9
Genomic_copies_per_PFU<-3.65
((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
10^-3.5
10^6.65
10^3.65
Environmental_Cont<-(10^Hu_NV_restroom) * (98) * .109
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
#Library
source("Library.R")
rbetagen?
?rbetagen
?rbetagen
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
library(truncnorm)
install.packages("truncnorm")
library(truncnorm)
install.packages("EnvStats")
library("EnvStats")
rlnormTrunc(1,6.65,2.06,0.0,10.98)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU)
rlnormTrunc(1,6.65,2.06,0.0,10.98)
rlnormTrunc(1,6.65,2.06,0.0,10.98)
rlnormTrunc(1,6.65,2.06,0.0,10.98)
?rtriang
?rtriang
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe<-data.frame(
"Trial"<-1:500,
"Other"<-"",
stringsAsFactors = FALSE
)
for (i in 1:nrow(Contamination_Dataframe)){
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-NV_from_Restroom
}
Contamination_Dataframe<-data.frame(
"Trial"<-1:500,
"Other"<-"",
stringsAsFactors = FALSE
)
View(Contamination_Dataframe)
Contamination_Dataframe<-data.frame(
Trial<-1:500,
Other<-"",
stringsAsFactors = FALSE
)
View(Contamination_Dataframe)
Contamination_Dataframe<-data.frame(
"Trial"=1:500,
"Other" = "",
stringsAsFactors = FALSE
)
View(Contamination_Dataframe)
for (i in 1:nrow(Contamination_Dataframe)){
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-NV_from_Restroom
}
View(Contamination_Dataframe)
hist(Contamination_Dataframe$Other)
Contamination_Dataframe<-data.frame(
"Trial"=1:500,
"Other" = "",
stringsAsFactors = FALSE
)
for (i in 1:nrow(Contamination_Dataframe)){
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-as.numeic(NV_from_Restroom)
}
Contamination_Dataframe<-data.frame(
"Trial"=1:500,
"Other" = "",
stringsAsFactors = FALSE
)
for (i in 1:nrow(Contamination_Dataframe)){
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-as.numeric(NV_from_Restroom)
}
hist(Contamination_Dataframe$Other)
hist(x = Contamination_Dataframe$Other)
View(Contamination_Dataframe)
?hist
class(Contamination_Dataframe$Other)
class(NV_from_Restroom)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-as.numeric(NV_from_Restroom)
class(Contamination_Dataframe$Other)
class(NV_from_Restroom)
class(Contamination_Dataframe$Other[,3])
class(Contamination_Dataframe$Other[1])
as.numeric(Contamination_Dataframe$Other)
class(Contamination_Dataframe$Other)
class(Contamination_Dataframe$Other)
as.numeric(Contamination_Dataframe$Other)
contamination_Dataframe$other<-as.numeric(Contamination_Dataframe$Other)
Contamination_Dataframe$other<-as.numeric(Contamination_Dataframe$Other)
class(Contamination_Dataframe$Other)
ggplot(Contamination_Dataframe, aes(Other, Count))
ggplot(Contamination_Dataframe, aes(Other, count))
+ geom_histogram()
ggplot(Contamination_Dataframe, aes(Other, count))
ggplot(Contamination_Dataframe, aes(x = Other))
ggplot(Contamination_Dataframe, aes(x = Other))
+ geom_histogram()
ggplot(Contamination_Dataframe, aes(x = Other))
ggplot(Contamination_Dataframe, aes(x = Other))
+ geom_histogram(alpha = 0.5, position = 'identity', boundary=-1, binwidth = 1 )
ggplot(Contamination_Dataframe, aes(x = Other))+
geom_histogram(alpha = 0.5, position = 'identity', boundary=-1, binwidth = 1 )
ggplot(Contamination_Dataframe, aes(x = Other))+
geom_histogram()
ggplot(Contamination_Dataframe, aes(x = Other))+
geom_histogram(stat = count())
Contamination_Dataframe<-data.frame(
"Trial"=1:500,
"Other" = "",
stringsAsFactors = FALSE
)
Contamination_Dataframe<-data.frame(
"Trial"=1:500,
"Other" = as.numeric(0),
stringsAsFactors = FALSE
)
for (i in 1:nrow(Contamination_Dataframe)){
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-as.numeric(NV_from_Restroom)
}
class(Contamination_Dataframe$Other)
ggplot(Contamination_Dataframe, aes(x = Other))+
geom_histogram(stat = count())
hist(Contamination_Dataframe$Other)
?hist
hist(Contamination_Dataframe$Other, breaks = 50)
hist(Contamination_Dataframe$Other, breaks = 50, xlim = 200)
hist(Contamination_Dataframe$Other, breaks = 50, xlim = 200)
?hist
hist(Contamination_Dataframe$Other, breaks = 50, xlim = 2000)
hist(Contamination_Dataframe$Other, breaks = 50)
View(Contamination_Dataframe)
hist(Contamination_Dataframe$Other, breaks = 500)
hist(Contamination_Dataframe$Other, breaks = 20000)
boxplot(Contamination_Dataframe$Other)
Contamination_Dataframe<-data.frame(
"Trial"=1:500,
"Other" = as.numeric(0),
stringsAsFactors = FALSE
)
for (i in 1:nrow(Contamination_Dataframe)){
Surface_hands<- 98  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-as.numeric(NV_from_Restroom)
}
hist(Contamination_Dataframe$Other, breaks = 20000)
boxplot(Contamination_Dataframe$Other)
hist(Contamination_Dataframe$Other, breaks = 20000)
mass_feces_hands<- rbetagen(500,4.57,2.55,-8.00,-1.00) #log(g/hands)
mean(mass_feces_hands)
sd(mass_feces_hands)
Contamination_Dataframe<-data.frame(
"Trial"=1:500,
"Other" = as.numeric(0),
stringsAsFactors = FALSE
)
for (i in 1:nrow(Contamination_Dataframe)){
Surface_hands<- 52  #cm^2
mass_feces_hands<- rbetagen(1,4.57,2.55,-8.00,-1.00) #log(g/hands)
HU_NV_in_Feces<- rlnormTrunc(1,6.65,2.06,0.0,10.98) #log HuNov CG/ g
Hu_NV_restroom<- runif(1,0,2) #log HUNOV/cm2
TE_RH<- rtriang(1,.036,.07,.22)
Genomic_copies_per_PFU<-rnormTrunc(1,3.65,.98,2.00,5.40)
Personal_Contamination<-((10^mass_feces_hands) * (10^HU_NV_in_Feces))/(10^Genomic_copies_per_PFU) #PFU/Hand
Environmental_Cont<-(10^Hu_NV_restroom) * (Surface_hands) * TE_RH
NV_from_Restroom<-(Personal_Contamination+Environmental_Cont)
Contamination_Dataframe[i,colnames(Contamination_Dataframe)=="Other"]<-as.numeric(NV_from_Restroom)
}
boxplot(Contamination_Dataframe$Other)
hist(Contamination_Dataframe$Other, breaks = 20000)
