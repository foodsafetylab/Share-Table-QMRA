stat_compare_means(method = "anova")
TukeyHSD(fm1)
Tuckey<-TukeyHSD(fm1)
plot(Tuckey , las=1 , col="brown")
boxp+stat_pvalue_manual(stat.test, label = "p.adj.signif", tip.length = 0.1)
plot(Tuckey , las=1 , col="brown")
TUKEY<-TukeyHSD(fm1)
plot(TuKEY , las=1 , col="brown")
plot(TUKEY , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "data$treatment")
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment , ylim=c(min(data$value) , 1.1*max(data$value)) , col=my_colors[as.numeric(LABELS[,1])] , ylab="value" , main="")
# I want to write the letter over each box. Over is how high I want to write it.
over <- 0.1*max( a$stats[nrow(a$stats),] )
#Add the labels
text( c(1:nlevels(data$treatment)) , a$stats[nrow(a$stats),]+over , LABELS[,1]  , col=my_colors[as.numeric(LABELS[,1])] )
Q
plot(TUKEY , las=1 , col="brown")
stat.test
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()
boxp
boxp+stat_compare_means(comparisons = cmpr, tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4),c(1,6), c(3,6)),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
plot(TUKEY , las=1 , col="brown")
boxp+stat_compare_means( comparisons = list(c(1,4),c(1,6), c(6,3)),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
plot(TUKEY , las=1 , col="brown")
boxp+stat_compare_means( comparisons = list(c(1,4),c(6,1), c(6,3)),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4),c(6,1), c(6,3)),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3), ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3), ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3) ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+stat_summary(fun=mean, colour="darkred", geom="point",
shape=18, size=3, show.legend=FALSE)
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+stat_summary(fun=mean, colour="darkred", geom="point",
shape=18, size=3, show.legend=FALSE)+
geom_text(data = means, aes(label = weight, y = weight + 0.08))
means <- aggregate(Prev ~  method, Sanitizer_Data, mean)
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = weight, y = weight + 0.08))
means <- aggregate(Prev ~  method, Sanitizer_Data, mean)
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = weight, y = weight + 0.08))
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = weight, y = weight + 0.08)
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = weight, y = weight + 0.08))
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev + 0.08))
boxp
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))
means <- aggregate(Prev ~  method, Sanitizer_Data, round(mean,3))
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))
means
round(means$Prev,3)
round(means$Prev,4)
means$Prev<-round(means$Prev,4)
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3) ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3) ),tip.length=0.05,
label = "p.format",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3) ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(6.1) ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(6.1) ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(6,1) ),tip.length=0.05,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(6,1) ),tip.length=0.1,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(6,1) ),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(6,1) ),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 100),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(6,1) ),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
stat.test
TUKEY
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 10),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),tip.length=0.01,
label = "p.signif",
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1),
symbols = c("****", "***", "**", "*", "ns")))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ))
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ))+
stat_compare_means(label.y = 50)
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ))+
stat_compare_means(label.y = 0.5)
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ))+
stat_compare_means(label.y = 0.1)
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ))+
stat_compare_means(label.y = 0.05)
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),method="t.test")+
stat_compare_means(label.y = 0.05)
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),method="wilcox.test")+
stat_compare_means(label.y = 0.05)
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),method="t.test")+
stat_compare_means(label.y = 0.05)
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),method="t.test")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6) ),method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp+stat_compare_means( comparisons = list(c(1,4), c(6,3),c(1,6),c(3,4)),method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
my_comps<-list(c(1,2),c(3,1),c(4,1),c(1,4), c(6,3),c(1,6),c(3,4))
boxp+stat_compare_means( comparisons =my_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
boxp+stat_compare_means( comparisons =my_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova") +theme_grey()
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova") +theme_bw()
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova") +  scale_colour_grey(start = 0, end = .9) +
theme_bw()
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova") + scale_colour_grey(start = 0, end = .9)
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0, end = .9)
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.2, end = .9)
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.2, end = .9)
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9)
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9)
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
#shapiro wilk test shows that all groups follow a normal distribution.
levene_test(Sanitizer_Data, Prev~method)
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9) +
ggtitle("Hand sanitizer effect on mean illness prevalence") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9) +
ggtitle("Hand sanitizer effect on mean illness prevalence") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9) +
ggtitle("Hand sanitizer effect on mean illness prevalence") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))+
scale_fill_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Hand sanitizer effect on mean illness prevalence") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected",element_text(vjust = 0.5)) +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected",element_text(hjust = 0.5)) +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.5, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.4, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
#Boxplot
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.4, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.45, method = "anova")
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.4, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.045, method = "anova")
#Boxplot
boxp<-Sanitizer_Data %>%
ggplot(aes(y = Prev,x = method, fill = method))+
geom_boxplot()+
geom_text(data = means, aes(label = Prev, y = Prev ))+
scale_fill_grey(start = 0.4, end = .9,labels = c("one", "two", "three", "four", "five", "six")) +
ggtitle("Illness prevalence per hand-sanitizer distribution selected") +
xlab("Hand Sanitizer Distribution") + ylab("Illness Prevalence")+
scale_x_discrete(labels = c("one", "two", "three", "four", "five", "six"))
my_comps<-list(c(1,2),c(3,1),c(4,1),c(5,1),c(6,1),c(3,2),c(4,2),c(5,2),c(6,2),c(4,3),c(5,3), c(6,3),c(5,4),c(6,4),c(6,5))
my_final_comps<-list(c(3,6),c(1,6))
boxp+stat_compare_means( comparisons =my_final_comps ,method="t.test",label = "p.signif")+
stat_compare_means(label.y = 0.05, method = "anova")
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,1:6)
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
sample(1,c(1:6))
Wash_Method = sample(c(1:6),1)
sample(c(1:6),1)
sample(c(1:6),1)
sample(c(1:6),1)
sample(c(1:6),1)
sample(c(1:6),1)
logred_v<-c()
for ( i in 1:1000){
Wash_Method = sample(c(1:6),1)
Func_Randomize_Sanitizer<-function(Wash_Method){
if (Wash_Method==1){
#Wilson, non residual hand sanitizer 30s.
Logred<-rnormTrunc(n = 1,mean = 1.06,sd = 0.54,min = 0.15,max = 1.89)
#Ecudero Abarca 30s high soil load, conservative.
} else if (Wash_Method==2){
Logred<-rnorm(1,2.2,0.07)
#VF447 70% ethanol Manciaga in vivo 30s
} else if (Wash_Method==3){
Logred<-rnorm(1,2.48,0.45)
#Kampf sterillum virguard 95% ethanol
} else if (Wash_Method==4){
Logred<-rnorm(1,2.17,1.065)
#Liu hand sanitizers in general 62% alcoh
}else if (Wash_Method==5){
Logred<-runif(1,0.14,0.34)
#LAgues 62% ethanol purell
}else if (Wash_Method==6){
Logred<-0.5
}
return(Logred)
}
logred_v<-c(logred_v,Logred)
}
logred_v<-c()
for ( i in 1:1000){
Wash_Method = sample(c(1:6),1)
Func_Randomize_Sanitizer<-function(Wash_Method){
if (Wash_Method==1){
#Wilson, non residual hand sanitizer 30s.
Logred<-rnormTrunc(n = 1,mean = 1.06,sd = 0.54,min = 0.15,max = 1.89)
#Ecudero Abarca 30s high soil load, conservative.
} else if (Wash_Method==2){
Logred<-rnorm(1,2.2,0.07)
#VF447 70% ethanol Manciaga in vivo 30s
} else if (Wash_Method==3){
Logred<-rnorm(1,2.48,0.45)
#Kampf sterillum virguard 95% ethanol
} else if (Wash_Method==4){
Logred<-rnorm(1,2.17,1.065)
#Liu hand sanitizers in general 62% alcoh
}else if (Wash_Method==5){
Logred<-runif(1,0.14,0.34)
#LAgues 62% ethanol purell
}else if (Wash_Method==6){
Logred<-0.5
}
return(Logred)
}
Logred<-Func_Randomize_Sanitizer(Wash_Method = Wash_Method )
logred_v<-c(logred_v,Logred)
}
logred_v
hist(logred_v)
#Inputs and Source Files-------------------------------------
start_time<-Sys.time()
#Inputs
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
#Changing Inputs for Washing on, Wraaping off.
#Washing Between Services
Wash_Between_Services<-0
#Wash Selection Table Fruit
Wash_Selection_YN_Fr<-1
#Wash Share Table Items
Wash_ST_YN_Fr<-1
#Changing Wrapping off:
#Wrapping Apples
Wrapping_Apples<-0
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
save.image("C:/Users/Gustavo Reyes/Box/Share Table Project/QMRA Files/QMRA Paper/Final Analyses R Files Data/Rdata Sanitizer Analysis and Washing.RData")
