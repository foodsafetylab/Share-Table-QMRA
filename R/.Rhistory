}
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Not Shared"]<-"Discarded"
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Not Consumed"]<-"Discarded"
if(Reservice_YN==0){
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Selection Table"]<-"Discarded"
}
if(Resharing_YN==0){
Pss_Data.Frame$Location[Pss_Data.Frame$Location=="Shared"]<-"Discarded"
}
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Not Shared"]<-"Discarded"
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Not Consumed"]<-"Discarded"
if(Reservice_YN==0){
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Selection Table"]<-"Discarded"
}
if(Resharing_YN==0){
Pre_Data.Frame$Location[Pre_Data.Frame$Location=="Shared"]<-"Discarded"
}
#Adding Services
Fr_Data.Frame<-func_Add_Services(Fr_Data.Frame)
Pss_Data.Frame<-func_Add_Services(Pss_Data.Frame)
Pre_Data.Frame<-func_Add_Services(Pre_Data.Frame)
#Adding the data to the datalist
datalistFr[[j]]<-Fr_Data.Frame
datalistPss[[j]]<-Pss_Data.Frame
datalistPre[[j]]<-Pre_Data.Frame
source("Output_Services.R")
List_Sens_Fr[[paste(l,k,j)]]<-Fr_Data.Frame
List_Sens_Pss[[paste(l,k,j)]]<-Pss_Data.Frame
List_Sens_Pre[[paste(l,k,j)]]<-Pre_Data.Frame
message("Service #", j)
} #end of second loop
#Creation of the Services Data Frames
Fr_Data = do.call(rbind,datalistFr)
Pss_Data = do.call(rbind,datalistPss)
Pre_Data = do.call(rbind,datalistPre)
#Adding Data into the Datalists
datalistFr_days[[k]]<-Fr_Data
datalistPss_days[[k]]<-Pss_Data
datalistPre_days[[k]]<-Pre_Data
source("Output_Days.R")
message("Day #", k)
}#end of day loop k
source("Output_SummaryStats.R")
source("Output_Visuals.R")
message("Done Gathering Data", l)
end_time<-Sys.time()
Total_time<-end_time-start_time
print(Total_time)
} #end of l loop for iterations.
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
Individual_Analysis_Fr_Consumed<-Individual_Analysis_Fr[which(Individual_Analysis_Fr$Location == "Consumed"),]
Individual_Analysis_Fr_Consumed_W$DeltaCont<-Individual_Analysis_Fr_Consumed_W$Contamination-Individual_Analysis_Fr_Consumed_W$InContamination
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContConsumed<-Individual_Analysis_Fr_Consumed$ContConsumed-Individual_Analysis_Fr_Consumed$InContamination
IA_Wash<-Individual_Analysis_Fr_Consumed_W[,c(1,18)]
IA_Cont<-Individual_Analysis_Fr_Consumed[,c(1,18)]
IA_Wrapp<-Individual_Analysis_Fr_Consumed[,c(1,19)]
IA_Wash$Type<-"Wash"
IA_Cont$Type<-"Before Wrap"
IA_Wrapp$Type<-"After Wrap"
names(IA_Wrapp)[2]<-"DeltaCont"
IA_All<-bind_rows(IA_Wash,IA_Cont,IA_Wrapp)
IA_Wash_c<-Individual_Analysis_Fr_Consumed_W[,c(1,4)]
IA_Cont_c<-Individual_Analysis_Fr_Consumed[,c(1,4)]
IA_Wrapp_c<-Individual_Analysis_Fr_Consumed[,c(1,5)]
IA_Wash_c$Type<-"Wash"
IA_Cont_c$Type<-"Before Wrap"
IA_Wrapp_c$Type<-"After Wrap"
names(IA_Wrapp_c)[2]<-"Contamination"
IA_All_c<-bind_rows(IA_Wash_c,IA_Cont_c,IA_Wrapp_c)
IA_All_cl<-Func_Convert_Log(IA_All_c,"Contamination")
#Contamination
ggplot(data = IA_All_cl,aes(x=Contamination, fill=Type))+
geom_density(colour="black", alpha=.3)
#Contaminatio no 0s
ggplot(data = IA_All_c,aes(x=Contamination, fill=Type))+
geom_density(colour="black", alpha=.3)+
scale_x_log10()
#Delta Contamination
ggplot(data = IA_All,aes(x=DeltaCont, fill=Type))+
geom_density(colour="black", alpha=.3)
#Delta Contamination
ggplot(data = IA_All,aes(x=DeltaCont, fill=Type))+
geom_density(colour="black", alpha=.3)+
scale_x_log10()
#boxplot Contamination
ggplot(data = IA_All_c,aes( y=Contamination))+
geom_boxplot(aes(fill=Type))+
scale_x_log10()
#boxplot Contamination
ggplot(data = IA_All_c,aes( y=Contamination))+
geom_boxplot(aes(fill=Type))+
scale_x_log10()
#boxplot Contamination
ggplot(data = IA_All_c,aes( y=Contamination))+
geom_boxplot(aes(fill=Type))+
scale_y_log10()
#boxplot Contamination
ggplot(data = IA_All_cl,aes( y=Contamination))+
geom_boxplot(aes(fill=Type))
#boxplot Contamination
ggplot(data = IA_All_cl,aes( y=Contamination))+
geom_boxplot(aes(fill=Type))+
scale_y_log10()
#boxplot Contamination
ggplot(data = IA_All_c,aes( y=Contamination))+
geom_boxplot(aes(fill=Type))+
scale_y_log10()
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#Wrapping
Individual_Analysis_Fr_Consumed<-Individual_Analysis_Fr[which(Individual_Analysis_Fr$Location == "Consumed"),]
Individual_Analysis_Fr_Consumed_melt<-melt(data =Individual_Analysis_Fr_Consumed[,4:5])
Individual_Analysis_Fr_Consumed_melt$ID<-1:2200 #Change based on number o fruit
#boxplot
ggplot(data=Individual_Analysis_Fr_Consumed_melt, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")
#For Delta Contamination of wrapped.
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$ContConsumed
Individual_Analysis_Fr_Consumed_melt_Wrap<-(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap<-(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap<-(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap$ID<-1:(nrow(Individual_Analysis_Fr_Consumed_melt_Wrap)/2) #Change based on number o fruit
View(Individual_Analysis_Fr_Consumed_melt_Wrap)
#For Delta Contamination of wrapped.
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$ContConsumed
View(Individual_Analysis_Fr_Consumed)
#Wrapping
Individual_Analysis_Fr_Consumed<-Individual_Analysis_Fr[which(Individual_Analysis_Fr$Location == "Consumed"),]
Individual_Analysis_Fr_Consumed_melt<-melt(data =Individual_Analysis_Fr_Consumed[,4:5])
Individual_Analysis_Fr_Consumed_melt$ID<-1:2200 #Change based on number o fruit
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#Wrapping
Individual_Analysis_Fr_Consumed<-Individual_Analysis_Fr[which(Individual_Analysis_Fr$Location == "Consumed"),]
#For Delta Contamination of wrapped.
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$ContConsumed
Individual_Analysis_Fr_Consumed_melt_Wrap<-(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap<-melt(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap<-melt(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap$ID<-1:(nrow(Individual_Analysis_Fr_Consumed_melt_Wrap)/2) #Change based on number o fruit
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#Wrapping
Individual_Analysis_Fr_Consumed<-Individual_Analysis_Fr[which(Individual_Analysis_Fr$Location == "Consumed"),]
Individual_Analysis_Fr_Consumed_melt<-melt(data =Individual_Analysis_Fr_Consumed[,4:5])
Individual_Analysis_Fr_Consumed_melt$ID<-1:2200 #Change based on number o fruit
#For Delta Contamination of wrapped.
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$ContConsumed-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed_melt_Wrap<-melt(data =Individual_Analysis_Fr_Consumed[,18:19])
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#For Delta Contamination of wrapped.
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$ContConsumed-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed_melt_Wrap<-melt(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap$ID<-1:(nrow(Individual_Analysis_Fr_Consumed_melt_Wrap)/2) #Change based on number o fruit
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")
p_meds <- ddply(p, .(TYPE), summarise, med = median(TOTALREV))
library(tidyverse)
p_meds <- ddply(p, .(TYPE), summarise, med = median(TOTALREV))
library(plyr)
p_meds <- ddply(p, .(TYPE), summarise, med = median(TOTALREV))
p_meds <- ddply(Individual_Analysis_Fr_Consumed_melt_Wrap, .(TYPE), summarise, med = median(TOTALREV))
View(Individual_Analysis_Fr_Consumed_melt_Wrap)
p_meds <- ddply(Individual_Analysis_Fr_Consumed_melt_Wrap, .(variable), summarise, med = median(value))
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
Func_Convert_Log(Individual_Analysis_Fr_Consumed_melt_Wrap, "value")
log10(-1.814252e-03)
10^-1.814252e-03
Individual_Analysis_Fr_Consumed_melt_Wrap$value<-10^Individual_Analysis_Fr_Consumed_melt_Wrap$value
Individual_Analysis_Fr_Consumed_melt_Wrap$value<-log10(Individual_Analysis_Fr_Consumed_melt_Wrap$value)
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#For Delta Contamination of wrapped.
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$ContConsumed-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed_melt_Wrap<-melt(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap$ID<-1:(nrow(Individual_Analysis_Fr_Consumed_melt_Wrap)/2) #Change based on number o fruit
View(Individual_Analysis_Fr_Consumed_melt_Wrap)
log10(-1.814252e-03)
log10(5)
log10(.000000001)
log10(-1.814252e-03)
log10(-.000000001)
#Changing to logs only if necessary
Individual_Analysis_Fr_Consumed$Contamination<-log10(Individual_Analysis_Fr_Consumed$Contamination)
Individual_Analysis_Fr_Consumed$InContamination<-log10(Individual_Analysis_Fr_Consumed$InContamination)
Individual_Analysis_Fr_Consumed$ContConsumed<-log10(Individual_Analysis_Fr_Consumed$ContConsumed)
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$ContConsumed-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed_melt_Wrap<-melt(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap$ID<-1:(nrow(Individual_Analysis_Fr_Consumed_melt_Wrap)/2) #Change based on number o fruit
#Function for median
p_meds <- ddply(Individual_Analysis_Fr_Consumed_melt_Wrap, .(variable), summarise, med = median(value))
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Function for median
p_meds <- ddply(Individual_Analysis_Fr_Consumed_melt_Wrap, .(variable), summarise, med = median(value))
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
View(Individual_Analysis_Fr_Consumed_melt_Wrap)
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#1. Start from here
#This section creates a data frame with every item, Including repeated items, since it is a snapshot of the end of every service
Individual_Analysis_Fr<-bind_rows(List_Sens_Fr)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#Wrapping
Individual_Analysis_Fr_Consumed<-Individual_Analysis_Fr[which(Individual_Analysis_Fr$Location == "Consumed"),]
Individual_Analysis_Fr_Consumed_melt<-melt(data =Individual_Analysis_Fr_Consumed[,4:5])
Individual_Analysis_Fr_Consumed_melt$ID<-1:(nrow(Individual_Analysis_Fr_Consumed_melt_Wrap)/2) #Change based on number o fruit
#boxplot
ggplot(data=Individual_Analysis_Fr_Consumed_melt, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")
Individual_Analysis_Fr_Consumed$DeltaCont<-Individual_Analysis_Fr_Consumed$Contamination-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed$DeltaContCons<-Individual_Analysis_Fr_Consumed$ContConsumed-Individual_Analysis_Fr_Consumed$InContamination
Individual_Analysis_Fr_Consumed_melt_Wrap<-melt(data =Individual_Analysis_Fr_Consumed[,18:19])
Individual_Analysis_Fr_Consumed_melt_Wrap$ID<-1:(nrow(Individual_Analysis_Fr_Consumed_melt_Wrap)/2) #Change based on number o fruit
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_log10()+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#boxplot
ggplot(data=Individual_Analysis_Fr_Consumed_melt, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
scale_y_log10()+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")
#Function for median
p_meds <- ddply(Individual_Analysis_Fr_Consumed_melt_Wrap, .(variable), summarise, med = median(value))
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_log10()+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
#scale_y_log10()+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_log10()+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
View(Individual_Analysis_Fr_Consumed_melt_Wrap)
ggplot(data=Individual_Analysis_Fr_Consumed_melt, aes(x=value))+
geom_histogram(aes(fill=variable))+
scale_x_log10()
ggplot(data=Individual_Analysis_Fr_Consumed)+
geom_point(aes(y = Contamination, x = rownames(Individual_Analysis_Fr_Consumed)), col="blue", alpha=.5)+
geom_point(aes(y = ContConsumed, x = rownames(Individual_Analysis_Fr_Consumed)), col="Red", alpha=.5)+
scale_y_log10()
#Smooth
ggplot(data=Individual_Analysis_Fr_Consumed_melt, aes(x=ID, y=value))+
geom_point(aes(col=variable), alpha=.1)+
geom_smooth(aes(col=variable))+
scale_y_log10()+
ggtitle("Reduction contamination consumed due to wrapping fruit")+
xlab("Fruit #")+
ylab("Contamination HuNov PFU/Fruit")
#Smooth
ggplot(data=Individual_Analysis_Fr_Consumed_melt, aes(x=ID, y=value))+
geom_point(aes(col=variable), alpha=.1)+
geom_smooth(aes(col=variable))+
scale_y_log10()+
ggtitle("Reduction contamination consumed due to wrapping fruit")+
xlab("Fruit #")+
ylab("Contamination HuNov PFU/Fruit")
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_x_continuous(trans=reverselog_trans(base=10),
labels=trans_format("identity", function(x) -x))
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_x_continuous(trans=reverselog_trans(base=10))+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
library(scales)
reverselog_trans <- function(base = exp(1)) {
trans <- function(x) -log(x, base)
inv <- function(x) base^(-x)
trans_new(paste0("reverselog-", format(base)), trans, inv,
log_breaks(base = base),
domain = c(1e-100, Inf))
}
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_x_continuous(trans=reverselog_trans(base=10))+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
Q
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
cale_x_continuous(trans=reverselog_trans(base=10),
labels=trans_format("identity", function(x) -x))+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_x_continuous(trans=reverselog_trans(base=10),
labels=trans_format("identity", function(x) -x))+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
library(ggallin)
library(ggallin)
install.packages("ggallin")
library(ggallin)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_x_continuous(trans = pseudolog10_trans)+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_continuous(trans = pseudolog10_trans)+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_continuous(trans = pseudolog10_trans,breaks = 10)+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_continuous(trans = pseudolog10_trans(base=10))+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_continuous(trans = pseudolog10_trans)+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
#Boxplot Deltacont
ggplot(data=Individual_Analysis_Fr_Consumed_melt_Wrap, aes(x=variable, y=value))+
geom_boxplot(aes(fill=variable))+
ggtitle("Exposure fruit wrapped vs if fruit not wrapped")+
xlab("Contamination wrapped fruit vs Contamination consumed")+
ylab("Contamination PFU/Fruit")+
scale_y_continuous(trans = scales::pseudo_log_trans())+
geom_text(data = p_meds, aes(x = variable, y = med, label = med),
size = 3, vjust = -1.5)
