Treatment_Names<-c("ON", "OFF", "ONWash","ONWr", "OFFWash","OFFWr", "XExc", "XSTClosed", "STAside", 'Touch', "TouchST", "WStation", "WBucket")
NStudentsConsumed<-sapply(List_Summary_Table, nrow)
List_Summary_Table_Ill<-list(df_ill_Week_ON_Box_Prev,df_ill_Week_OFF_Box_Prev,df_ill_Week_ONWash_Box_Prev,df_ill_Week_ONWr_Box_Prev,df_ill_Week_OFFWash_Box_Prev,df_ill_Week_OFFWr_Box_Prev,df_ill_Week_Exc_Box_Prev, df_ill_Week_STClosed_Box_Prev, df_ill_Week_STAside_Box_Prev, df_ill_Week_Touch_Box_Prev, df_ill_Week_TouchST_Box_Prev, df_ill_Week_WStation_Box_Prev, df_ill_Week_WBucket_Box_Prev)
List_Summary_Table_Ill_Col<-lapply(List_Summary_Table_Ill,"[[","Prev")
MeanPRevalneces<-sapply(X =List_Summary_Table_Ill_Col,FUN = mean )
MeadianPrevalences<-sapply(X =List_Summary_Table_Ill_Col,FUN = median )
Prevs975<-sapply(X =List_Summary_Table_Ill_Col,FUN = quantile,.975  )
Prevs025<-sapply(X =List_Summary_Table_Ill_Col,FUN = quantile,.025  )
List_Percentages_Dist<-list(tipsON,tipsOFF,tipsONWash,tipsONWr,tipsOFFWash, tipsOFFWr,tipsExc, tipsSTClosed, tipsSTAside, tipsTouch, tipsTouchST)
ZerosL<-unlist(sapply(List_Percentages_Dist,function(x) x[4,3]))
ZeroNine<-unlist(sapply(List_Percentages_Dist,function(x) x[3,3]))
Nine_3Nine<-unlist(sapply(List_Percentages_Dist,function(x) x[2,3]))
ThousandsL<-unlist(sapply(List_Percentages_Dist,function(x) x[1,3]))
#Creation of Data Frame
Summary_Comparison_Treatments<-data.frame(
"Treatment" = c(1:13),
"Treatment Desc" = Treatment_Names
)
Summary_Comparison_Treatments<-data.frame(
"Treatment" = c(1:13),
"Treatment Desc" = Treatment_Names,
"NWeeks" = Sens_Iterations,
"Participating Students" = N_Iterations*Service_No* Food_Days*Sens_Iterations,
"NStudentCosumedFood" = NStudentsConsumed,
#"ConsumptionRate"=Summary_Comparison_Treatments$NStudentCosumedFood/Summary_Comparison_Treatments$Participating.Students*100,
"TotalFruitSystem"= Vector_Total_Items,
"TotalFruitConsumed"=Vector_Total_Item_Con,
"TotalFruitDiscarded"=Vector_Total_Item_Dis,
#"PercentConsumed"=Summary_Comparison_Treatments$TotalFruitConsumed/Summary_Comparison_Treatments$TotalFruitSystem,
#"PercentDiscarded"=Summary_Comparison_Treatments$TotalFruitDiscarded/Summary_Comparison_Treatments$TotalFruitSystem,
"0" = ZerosL*100 ,
">0" = ZeroNine*100,
">100"=Nine_3Nine*100,
">1000"= ThousandsL*100,
"Mean Prevalence Ill" = MeanPRevalneces*100,
"MedianPrev"= MeadianPrevalences,
"Top 97.5 Ill"=Prevs975*100,
"Bot 025 Ill"=Prevs025*100,
stringsAsFactors = FALSE
)
List_Summary_Table<-list(ST_ON_Analysis,ST_OFF_Analysis,ST_ONWash_Analysis,ST_ONWr_Analysis,ST_OFFWash_Analysis,ST_OFFWr_Analysis,ST_Exc_Analysis, ST_STClosed_Analysis, ST_STAside_Analysis, ST_Touch_Analysis, ST_TouchST_Analysis, ST_WStation_Analysis,ST_WBucket_Analysis)
Treatment_Names<-c("ON", "OFF", "ONWash","ONWr", "OFFWash","OFFWr", "XExc", "XSTClosed", "STAside", 'Touch', "TouchST", "WStation", "WBucket")
NStudentsConsumed<-sapply(List_Summary_Table, nrow)
List_Summary_Table_Ill<-list(df_ill_Week_ON_Box_Prev,df_ill_Week_OFF_Box_Prev,df_ill_Week_ONWash_Box_Prev,df_ill_Week_ONWr_Box_Prev,df_ill_Week_OFFWash_Box_Prev,df_ill_Week_OFFWr_Box_Prev,df_ill_Week_Exc_Box_Prev, df_ill_Week_STClosed_Box_Prev, df_ill_Week_STAside_Box_Prev, df_ill_Week_Touch_Box_Prev, df_ill_Week_TouchST_Box_Prev, df_ill_Week_WStation_Box_Prev, df_ill_Week_WBucket_Box_Prev)
List_Summary_Table_Ill_Col<-lapply(List_Summary_Table_Ill,"[[","Prev")
MeanPRevalneces<-sapply(X =List_Summary_Table_Ill_Col,FUN = mean )
MeadianPrevalences<-sapply(X =List_Summary_Table_Ill_Col,FUN = median )
Prevs975<-sapply(X =List_Summary_Table_Ill_Col,FUN = quantile,.975  )
Prevs025<-sapply(X =List_Summary_Table_Ill_Col,FUN = quantile,.025  )
List_Percentages_Dist<-list(tipsON,tipsOFF,tipsONWash,tipsONWr,tipsOFFWash, tipsOFFWr,tipsExc, tipsSTClosed, tipsSTAside, tipsTouch, tipsTouchST , tipsWStation,tipsWBucket)
ZerosL<-unlist(sapply(List_Percentages_Dist,function(x) x[4,3]))
ZeroNine<-unlist(sapply(List_Percentages_Dist,function(x) x[3,3]))
Nine_3Nine<-unlist(sapply(List_Percentages_Dist,function(x) x[2,3]))
ThousandsL<-unlist(sapply(List_Percentages_Dist,function(x) x[1,3]))
#Creation of Data Frame
Summary_Comparison_Treatments<-data.frame(
"Treatment" = c(1:13),
"Treatment Desc" = Treatment_Names
)
Summary_Comparison_Treatments<-data.frame(
"Treatment" = c(1:13),
"Treatment Desc" = Treatment_Names,
"NWeeks" = Sens_Iterations,
"Participating Students" = N_Iterations*Service_No* Food_Days*Sens_Iterations,
"NStudentCosumedFood" = NStudentsConsumed,
#"ConsumptionRate"=Summary_Comparison_Treatments$NStudentCosumedFood/Summary_Comparison_Treatments$Participating.Students*100,
"TotalFruitSystem"= Vector_Total_Items,
"TotalFruitConsumed"=Vector_Total_Item_Con,
"TotalFruitDiscarded"=Vector_Total_Item_Dis,
#"PercentConsumed"=Summary_Comparison_Treatments$TotalFruitConsumed/Summary_Comparison_Treatments$TotalFruitSystem,
#"PercentDiscarded"=Summary_Comparison_Treatments$TotalFruitDiscarded/Summary_Comparison_Treatments$TotalFruitSystem,
"0" = ZerosL*100 ,
">0" = ZeroNine*100,
">100"=Nine_3Nine*100,
">1000"= ThousandsL*100,
"Mean Prevalence Ill" = MeanPRevalneces*100,
"MedianPrev"= MeadianPrevalences,
"Top 97.5 Ill"=Prevs975*100,
"Bot 025 Ill"=Prevs025*100,
stringsAsFactors = FALSE
)
Summary_Comparison_Treatments<-data.frame(
"Treatment" = c(1:13),
"Treatment Desc" = Treatment_Names,
"NWeeks" = Sens_Iterations,
"Participating Students" = N_Iterations*Service_No* Food_Days*Sens_Iterations,
"NStudentCosumedFood" = NStudentsConsumed,
"ConsumptionRate"=Summary_Comparison_Treatments$NStudentCosumedFood/Summary_Comparison_Treatments$Participating.Students*100,
"TotalFruitSystem"= Vector_Total_Items,
"TotalFruitConsumed"=Vector_Total_Item_Con,
"TotalFruitDiscarded"=Vector_Total_Item_Dis,
"PercentConsumed"=Summary_Comparison_Treatments$TotalFruitConsumed/Summary_Comparison_Treatments$TotalFruitSystem*100,
"PercentDiscarded"=Summary_Comparison_Treatments$TotalFruitDiscarded/Summary_Comparison_Treatments$TotalFruitSystem*100,
"0" = ZerosL*100 ,
">0" = ZeroNine*100,
">100"=Nine_3Nine*100,
">1000"= ThousandsL*100,
"Mean Prevalence Ill" = MeanPRevalneces*100,
"MedianPrev"= MeadianPrevalences,
"Top 97.5 Ill"=Prevs975*100,
"Bot 025 Ill"=Prevs025*100,
stringsAsFactors = FALSE
)
write.csv(x =  Summary_Comparison_Treatments,"G:/Share Table QMRA/Share-Table-QMRA/R/Dose Response/SummaryComparison.csv", row.names = FALSE )
#write.csv(x =  Summary_Comparison_Treatments,"C:/Users/gareyes3/Documents/GitHub/Share-Table-QMRA/R/Dose Response/SummaryComparison.csv", row.names = FALSE )
binded_prevalences<-bind_rows(df_ill_Week_ON_Box_Prev,df_ill_Week_OFF_Box_Prev,df_ill_Week_ONWash_Box_Prev,df_ill_Week_ONWr_Box_Prev,df_ill_Week_OFFWash_Box_Prev,df_ill_Week_OFFWr_Box_Prev,df_ill_Week_Exc_Box_Prev, df_ill_Week_STClosed_Box_Prev, df_ill_Week_STAside_Box_Prev)
binded_prevalences$Prev<-binded_prevalences$Pre*100
binded_prevalences_Wash<-bind_rows(df_ill_Week_ON_Box_Prev,df_ill_Week_OFF_Box_Prev,df_ill_Week_ONWash_Box_Prev,df_ill_Week_OFFWash_Box_Prev)
binded_prevalences_WashWr<-bind_rows(df_ill_Week_ON_Box_Prev,df_ill_Week_OFF_Box_Prev,df_ill_Week_ONWash_Box_Prev,df_ill_Week_OFFWash_Box_Prev,df_ill_Week_ONWr_Box_Prev, df_ill_Week_OFFWr_Box_Prev)
colors_12<-c('STOFF'="dodgerblue4",'OFFWash' ="dodgerblue3",'OFFWr'="dodgerblue1",'STON' ="darkseagreen","ONwash" ="palegreen3","ONWr"="palegreen2","Exc" = "Orange", "XSTClosed" = "Red", "STAside"="Yellow" )
Histolabels2<-c("STOFF" = "Baseline: ST OFF, No Intervention",
"OFFWash"  = "ST OFF, Wash ON",
"OFFWr" ="ST OFF, Wrapping ON",
"STON"="ST ON, No Intervention",
"ONwash" =  "ST ON, Wash ON",
"ONWr" =  "ST ON, Wrapping ON",
"Exc"=  "STON, Ill Exclusion",
"XSTClosed" = "Re-service off",
"STAside"= "STAside"
)
Histolabels3<-c("STOFF" = "Baseline: ST OFF, No Intervention",
"OFFWash"  = "ST OFF, Wash ON",
"STON"="ST ON, No Intervention",
"ONwash" =  "ST ON, Wash ON"
)
Histolabels4<-c("STOFF" = "Baseline: ST OFF, No Intervention",
"OFFWash"  = "ST OFF, Wash ON",
"OFFWr" ="ST OFF, Wrapping ON",
"STON"="ST ON, No Intervention",
"ONwash" =  "ST ON, Wash ON",
"ONWr" =  "ST ON, Wrapping ON"
)
Dose_Hist_Stacked<-ggplot(data = binded_prevalences, mapping = aes(x= Prev, fill=factor(Int,c('STOFF','OFFWash', 'OFFWr',  'STON', 'ONwash',  'ONWr', 'Exc','XSTClosed', 'STAside') )))+
geom_histogram(bins=15,boundary = .001,color= "black")+
xlab(label = "Illness prevalence (%)")+
ylab(label = "Observation Count")+
ggtitle("Illness prevalence, comparing Interventions")+
theme(plot.title = element_text(hjust = 0.5))+
labs(fill = "Intervention")+
scale_fill_manual(values = colors_12, labels = Histolabels2)
ggsave(filename = "Dose_Hist_Stacked3.png", path = pathfolder,width = 10,height = 6,)
print(Dose_Hist_Stacked)
Facet_DR_Hist<-ggplot(data = binded_prevalences, mapping = aes(x= Prev))+
geom_histogram(bins=15,boundary = .001, color= "black")+
facet_wrap(~factor(Int,c('STOFF','OFFWash', 'OFFWr',  'STON', 'ONwash',  'ONWr', 'Exc', 'XSTClosed', 'STAside')),  labeller = as_labeller(Histolabels2))+
scale_fill_manual( values =  colors_12)+
xlab(label = "Illness prevalence (%)")+
ylab(label = "Observation Count")+
ggtitle("Illness prevalence, comparing Interventions")+
theme(plot.title = element_text(hjust = 0.5))+
labs(fill = "Intervention")
ggsave(filename = "Facet_DR_Hist3.png", path = pathfolder,width = 10,height = 10,)
print(Facet_DR_Hist)
Facet_Washing_Hist<-ggplot(data = binded_prevalences_Wash, mapping = aes(x= Prev))+
geom_histogram(bins=15,boundary = .001, color= "black")+
facet_wrap(~factor(Int,c('STOFF','OFFWash'  ,'STON', 'ONwash')),  labeller = as_labeller(Histolabels3))+
xlab(label = "Illness prevalence (%)" )+
ylab(label = "Observation Count")+
ggtitle("Illness prevalence, comparing Interventions")+
theme(plot.title = element_text(hjust = 0.5))+
labs(fill = "Intervention")
ggsave(filename = "Facet_Washing_Hist.png", path = pathfolder,width = 10,height = 8,)
print(Facet_DR_Hist)
Facet_WaWr_Hist<-ggplot(data = binded_prevalences_WashWr, mapping = aes(x= Prev))+
geom_histogram(bins=15,boundary = .001, color= "black")+
facet_wrap(~factor(Int,c('STOFF','OFFWash'  ,'OFFWr','STON', 'ONwash','ONWr' )),  labeller = as_labeller(Histolabels4))+
xlab(label = "Illness prevalence (%)" )+
ylab(label = "Observation Count")+
ggtitle("Illness prevalence, comparing Interventions")+
theme(plot.title = element_text(hjust = 0.5))+
labs(fill = "Intervention")
ggsave(filename = "Facet_WashingWr_Hist.png", path = pathfolder,width = 10,height = 8,)
print(Facet_DR_Hist)
binded_prevalences_Tail<-binded_prevalences[binded_prevalences$Prev>2,]
Tails_prev<-ggplot(data = binded_prevalences_Tail, mapping = aes(x= Prev, fill=factor(Int,c('STOFF','OFFWash', 'OFFWr',  'STON', 'ONwash',  'ONWr','Exc','XSTClosed', 'STAside') )))+
geom_histogram(bins=10,color= "black")+
xlab(label = "Illness prevalence (%)")+
ylab(label = "Observation Count")+
ggtitle("Illness prevalence, comparing Interventions")+
theme(plot.title = element_text(hjust = 0.5))+
labs(fill = "Intervention")+
scale_fill_manual(values = colors_12, labels = c('STOFF'="Baseline: ST OFF, No Intervention",
'OFFWash'= "ST OFF, Wash ON",
'OFFWr'="ST OFF, Wrapping ON",
'STON'= "ST ON, No Interventions",
'ONwash'="ST ON, Wash ON",
'ONWr'="ST OFF, Wrapping ON",
'Exc'="STON, Ill Exclusion",
"Re-service off",
"STAside"= "STAside"))
ggsave(filename = "Tails_prev3.png", path = pathfolder,width = 10,height = 6,)
print(Tails_prev)
binded_prevalences_Tail3<-binded_prevalences[binded_prevalences$Prev>3,]
Tails_prev3<-ggplot(data = binded_prevalences_Tail3, mapping = aes(x= Prev, fill=factor(Int,c('STOFF','OFFWash', 'OFFWr',  'STON', 'ONwash',  'ONWr','Exc','XSTClosed', 'STAside') )))+
geom_histogram(bins=10,color= "black")+
xlab(label = "Illness prevalence (%)")+
ylab(label = "Observation Count")+
ggtitle("Illness prevalence, comparing Interventions")+
theme(plot.title = element_text(hjust = 0.5))+
labs(fill = "Intervention")+
scale_fill_manual(values = colors_12, labels = c('STOFF'="Baseline: ST OFF, No Intervention",
'OFFWash'= "ST OFF, Wash ON",
'OFFWr'="ST OFF, Wrapping ON",
'STON'= "ST ON, No Interventions",
'ONwash'="ST ON, Wash ON",
'ONWr'="ST OFF, Wrapping ON",
'Exc'="STON, Ill Exclusion",
"Re-service off",
"STAside"= "STAside"))
ggsave(plot = Tails_prev3,filename = "Tails_prev_3.png", path = pathfolder,width = 10,height = 6,)
print(Tails_prev3)
VIolinPlot<-ggplot(data = binded_prevalences, mapping = aes(y= Prev, x=factor(Int,c('STOFF','OFFWash', 'OFFWr',  'STON', 'ONwash',  'ONWr','Exc','XSTClosed', 'STAside') ), fill=factor(Int,c('STOFF','OFFWash', 'OFFWr',  'STON', 'ONwash',  'ONWr','Exc','XSTClosed','STAside') )))+
geom_violin()+
geom_boxplot(width=0.1)+
labs(fill = "Intervention")+
xlab(label = "Intervention")+
scale_fill_manual(values = colors_12, labels = c("Baseline: ST OFF, No Intervention",
"ST OFF, Wash ON",
"ST OFF, Wrapping ON",
"ST ON, No Interventions",
"ST ON, Wash ON",
"ST OFF, Wrapping ON",
"STON, Ill Exclusion",
"Re-service off",
"STAside"= "STAside"))
ggsave(filename = "Violin3.png",path = pathfolder,width = 10,height = 8,)
print(VIolinPlot)
ST_STClosed_Analysis_Con<-func_remove_repeats(Individual_Analysis_Fr_STClosed)
ST_STClosed_Analysis_Con$Type<-"Closed"
Combined_Closed_Analysis<-Func_DF_Locations_2()
ggplot(data =Combined_Closed_Analysis, aes(x = Type,fill=Location)  )+
geom_bar()+
geom_text(stat = "count",aes(label=..count..),position = position_stack(vjust = .5))+
xlab("Number of Fruit Items")+
ylab("Intervention")+
ggtitle("Share Table Interventions: Items Consumed vs Wasted")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_discrete(labels=c("XClosed"="Re-Service Off",
"OFF" = "STOFF",
"ON"= "STON",
'XAside' = 'ST ON: Wash before Serving',
'XExc' = 'Ill Exclusion'
))
ggsave(filename = "FoodSecFin3.png", path = pathfolder,width = 10,height = 8,)
Treatments_FW<-c("OFF","ON", "XClosed", "XExc", "XAside")
FoodWaste_Analysis<-data.frame(
"Treatment"=Treatments_FW
)
FoodWaste_Analysis<-data.frame(
"Treatment"=Treatments_FW,
"TotalFruit"="",
"TotalConsumed"="",
"TotalDiscarded"="",
"TotalReserviced"="",
"ConsumedSel"="",
"ConsumedST" ="",
stringsAsFactors = FALSE
)
FoodWaste_Analysis<-Function_FoodWaste_Full()
FoodWaste_Analysis_melted<-melt(data =FoodWaste_Analysis,id = "Treatment" )
FoodWaste_Analysis_melted$value<- as.numeric(FoodWaste_Analysis_melted$value)
FoodWaste_Analysis_melted<-FoodWaste_Analysis_melted[FoodWaste_Analysis_melted$variable != c("TotalFruit","TotalConsumed"),]
ggplot(data = FoodWaste_Analysis_melted, aes(x= Treatment,y=value, fill= factor(variable, levels  = c("TotalReserviced", "TotalDiscarded", "ConsumedSel", "ConsumedST"))))+
geom_col()+
scale_x_discrete(labels=c("XClosed"="Re-Service Off",
"OFF" = "STOFF",
"ON"= "STON",
'XAside' = 'One-way ST',
'XExc' = 'Ill Exclusion'
))+
ylab("Number of Fruit")+
xlab("Intervention")+
labs(fill = "Locations")+
ggtitle("Share Table Interventions: Items Consumed vs Wasted")+
theme(plot.title = element_text(hjust = 0.5))+
ggsave(filename = "FoodSecFin4.png", path = pathfolder,width = 10,height = 8,)
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-QMRA/R")
setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
pathfolder<-"DoseResponse3-10"
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
source("Util_FunctionFoodWaste.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("New_StudentLoop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#Summary DFs for Future-------------------------------------
library(plyr)
#Creating Data Frame of Consumed Items for all the products
#Copy of Compiled Data Frame
Individual_Analysis_Fr_CopON<-rbind.fill(List_Sens_Fr)
Contaminations_ON<-Vector_Contaminations_In
#Data Frame without repeats and Consumed Items
ST_ON_Analysis<-Func_Asys_MainDF(SummaryList = List_Sens_Fr,FoodType = "Fruit")
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-QMRA/R")
setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
pathfolder<-"DoseResponse3-10"
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
source("Util_FunctionFoodWaste.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("New_StudentLoop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#Summary DFs for Future-------------------------------------
library(plyr)
#Creating Data Frame of Consumed Items for all the products
#Copy of Compiled Data Frame
Individual_Analysis_Fr_CopON<-rbind.fill(List_Sens_Fr)
Contaminations_ON<-Vector_Contaminations_In
#Data Frame without repeats and Consumed Items
ST_ON_Analysis<-Func_Asys_MainDF(SummaryList = List_Sens_Fr,FoodType = "Fruit")
#Inputs and Source Files-------------------------------------
#Inputs
source("New_StudentLoop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
#Share Table Toggle
#Include Share Table:
Share_Table_YN<-0
#NOTE: Turn off Re-Sharing and -ST to reservice too (next section)
# Re-Sharing, Re-Service
#Share Table to Service line after every Day # note turn in 1 if ST on
STtoReservice_YN<-0
#Re-Sharing of Share table items after every service # note turn in 1 is ST on
Resharing_YN<-0
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#Summary DFs for Future.-------------------------------------
#Creating Data Frame of Consumed Items for all the products
#Copy of Compiled Data Frame
Individual_Analysis_Fr_CopOFF<-rbind.fill(List_Sens_Fr)
Contaminations_OFF<-Vector_Contaminations_In
#Data Frame without repeats and Consumed Items
ST_OFF_Analysis<-Func_Asys_MainDF(SummaryList = List_Sens_Fr,FoodType = "Fruit")
#Inputs and Source Files-------------------------------------
start_time<-Sys.time()
#Inputs
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
#Changing Inputs for Washing on, Wraaping off.
#Washing Between Services
Wash_Between_Services<-0
#Wash Selection Table Fruit
Wash_Selection_YN_Fr<-1
#Wash Share Table Items
Wash_ST_YN_Fr<-1
#Changing Wrapping off:
#Wrapping Apples
Wrapping_Apples<-0
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#Summary DFs for Future. -------------------------------------
#Creating Data Frame of Consumed Items for all the products
#Copy of Compiled Data Frame
Individual_Analysis_Fr_CopONWash<-rbind.fill(List_Sens_Fr)
Contaminations_ONWash<-Vector_Contaminations_In
#Data Frame without repeats and Consumed Items
ST_ONWash_Analysis<-Func_Asys_MainDF(SummaryList = List_Sens_Fr,FoodType = "Fruit")
#Inputs and Source Files-------------------------------------
start_time<-Sys.time()
#Inputs
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
#Changing Inputs for Washing off, Wraaping on.
#Washing Between Services
Wash_Between_Services<-0
#Wash Selection Table Fruit
Wash_Selection_YN_Fr<-0
#Wash Share Table Items
Wash_ST_YN_Fr<-0
#Changing Wrapping off:
#Wrapping Apples
Wrapping_Apples<-1
#Running Loop again:-------------------------------------
source("Main_Loops2.R")
#Summary DFs for Future.
#Creating Data Frame of Consumed Items for all the products
#Copy of Compiled Data Frame
Individual_Analysis_Fr_CopONWr<-rbind.fill(List_Sens_Fr)
Contaminations_ONWr<-Vector_Contaminations_In
#Data Frame without repeats and Consumed Items
ST_ONWr_Analysis<-Func_Asys_MainDF(SummaryList = List_Sens_Fr,FoodType = "Fruit")
#Inputs and Source Files-------------------------------------
start_time<-Sys.time()
#Inputs
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
#Share Table Toggle
#Include Share Table:
Share_Table_YN<-0
#NOTE: Turn off Re-Sharing and -ST to reservice too (next section)
# Re-Sharing, Re-Service
#Share Table to Service line after every Day # note turn in 1 if ST on
STtoReservice_YN<-0
#Re-Sharing of Share table items after every service # note turn in 1 is ST on
Resharing_YN<-0
#Changing Inputs for Washing on, Wraaping off.
#Washing Between Services
Wash_Between_Services<-0
#Wash Selection Table Fruit
Wash_Selection_YN_Fr<-1
#Wash Share Table Items
Wash_ST_YN_Fr<-1
#Changing Wrapping off:
#Wrapping Apples
Wrapping_Apples<-0
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
1-exp(-2.5*25)
1-exp(-20.5*25)
1-exp(-.002*25)
1-exp(-.00028*25)
#Inputs
Lot_Field<-10
No_Lot_Contaminated<-4
Cont_Field<-0.25 #CFU/g
#Sample Inputs
Sample_S<-25 #g
Pre_HarvestDF<-data.frame(
"Field" = "1",
"LotNo" = 1:Lot_Field,
"Contamination" = as.numeric("0"),
"Accept"=TRUE
)
#Random Assigning Contamination
F_FeedCont<-function(No_Lot_Contaminated, DF){
X<- sample(1:nrow(DF), No_Lot_Contaminated, replace=F)
DF$Contamination[X]<-Cont_Field/No_Lot_Contaminated
return(DF)
}
F_Sampling<-function(DF){
for (i in 1:nrow(DF)){
Cont<-DF[i,colnames(DF)== "Contamination"]
P_Detection<-1-exp(-Cont*Sample_S)
Accepted_YN<-ifelse(runif(1)<P_Detection,1,0)
if (Accepted_YN==1){
DF[i,colnames(DF)== "Accept"]<-FALSE
}
}
return(DF)
}
F_FilterAccepted<-function(DF){
DF<-DF%>%
filter(Accept==TRUE)
return(DF)
}
#Assigning Contmination to Field
Pre_HarvestDF<-F_FeedCont(No_Lot_Contaminated = No_Lot_Contaminated,DF = Pre_HarvestDF)
#PRE-Harvest
#Sampling Pre Harvest
Pre_HarvestDF<-F_Sampling(Pre_HarvestDF)
#HARVEST
#Filter Accepted Into HArvest DF
In_HarvestDF<-F_FilterAccepted(Pre_HarvestDF)
